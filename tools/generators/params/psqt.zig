const base = @import("base");
const root = @import("root");
const std = @import("std");

pub var tbl = std.EnumArray(base.types.Ptype, SquareTable(root.Pair))
  .initFill(SquareTable(root.Pair).initFill(.{ .mg = 0, .eg = 0 }));

fn SquareTable(comptime T: type) type {
	return std.EnumArray(base.types.Square, T);
}

pub fn init() void {
	const mg_tbls = std.EnumArray(base.types.Ptype, SquareTable(base.defs.score.Int)).init(.{
		.nul = SquareTable(base.defs.score.Int).initFill(0),
		.all = SquareTable(base.defs.score.Int).initFill(0),

		.pawn = SquareTable(base.defs.score.Int).init(.{
			.a8 =  0, .b8 =  0, .c8 =  0, .d8 =   0, .e8 =   0, .f8 =  0, .g8 =  0, .h8 =  0,
			.a7 = 60, .b7 = 60, .c7 = 60, .d7 =  70, .e7 =  70, .f7 = 60, .g7 = 60, .h7 = 60,
			.a6 = 40, .b6 = 40, .c6 = 40, .d6 =  60, .e6 =  60, .f6 = 40, .g6 = 40, .h6 = 40,
			.a5 = 20, .b5 = 20, .c5 = 20, .d5 =  50, .e5 =  50, .f5 = 20, .g5 = 20, .h5 = 20,
			.a4 =  5, .b4 =  5, .c4 = 10, .d4 =  40, .e4 =  40, .f4 = 10, .g4 =  5, .h4 =  5,
			.a3 =  5, .b3 =  5, .c3 =  5, .d3 =  30, .e3 =  30, .f3 =  5, .g3 =  5, .h3 =  5,
			.a2 =  5, .b2 =  5, .c2 =  5, .d2 = -30, .e2 = -30, .f2 =  5, .g2 =  5, .h2 =  5,
			.a1 =  0, .b1 =  0, .c1 =  0, .d1 =   0, .e1 =   0, .f1 =  0, .g1 =  0, .h1 =  0,
		}),

		.knight = SquareTable(base.defs.score.Int).init(.{
			.a8 = -10, .b8 =  0, .c8 =  0, .d8 =  0, .e8 =  0, .f8 =  0, .g8 =  0, .h8 = -10,
			.a7 =   0, .b7 =  5, .c7 =  5, .d7 =  5, .e7 =  5, .f7 =  5, .g7 =  5, .h7 =   0,
			.a6 =   0, .b6 =  5, .c6 = 25, .d6 = 25, .e6 = 25, .f6 = 25, .g6 =  5, .h6 =   0,
			.a5 =   0, .b5 =  5, .c5 = 25, .d5 = 25, .e5 = 25, .f5 = 25, .g5 =  5, .h5 =   0,
			.a4 =   0, .b4 =  5, .c4 = 25, .d4 = 25, .e4 = 25, .f4 = 25, .g4 =  5, .h4 =   0,
			.a3 =   0, .b3 =  5, .c3 = 25, .d3 = 25, .e3 = 25, .f3 = 25, .g3 =  5, .h3 =   0,
			.a2 =   0, .b2 =  5, .c2 =  5, .d2 =  5, .e2 =  5, .f2 =  5, .g2 =  5, .h2 =   0,
			.a1 = -10, .b1 = 10, .c1 =  0, .d1 =  0, .e1 =  0, .f1 =  0, .g1 = 10, .h1 = -10,
		}),

		.bishop = SquareTable(base.defs.score.Int).init(.{
			.a8 =  0, .b8 = 20, .c8 = 20, .d8 = 20, .e8 = 20, .f8 = 20, .g8 = 20, .h8 =  0,
			.a7 =  5, .b7 = 20, .c7 = 20, .d7 = 20, .e7 = 20, .f7 = 20, .g7 = 20, .h7 =  5,
			.a6 = 10, .b6 = 20, .c6 = 20, .d6 = 25, .e6 = 25, .f6 = 20, .g6 = 20, .h6 = 10,
			.a5 = 10, .b5 = 30, .c5 = 30, .d5 = 50, .e5 = 50, .f5 = 30, .g5 = 30, .h5 = 10,
			.a4 = 25, .b4 = 25, .c4 = 30, .d4 = 45, .e4 = 45, .f4 = 30, .g4 = 25, .h4 = 25,
			.a3 = 25, .b3 = 25, .c3 = 25, .d3 = 30, .e3 = 30, .f3 = 25, .g3 = 25, .h3 = 25,
			.a2 = 10, .b2 = 25, .c2 = 25, .d2 = 30, .e2 = 30, .f2 = 25, .g2 = 25, .h2 = 10,
			.a1 =  0, .b1 = 10, .c1 = 10, .d1 = 10, .e1 = 10, .f1 = 10, .g1 = 10, .h1 =  0,
		}),

		.rook = SquareTable(base.defs.score.Int).init(.{
			.a8 =  0, .b8 =  0, .c8 =  0, .d8 =  0, .e8 =  0, .f8 =  0, .g8 =  0, .h8 =  0,
			.a7 = 15, .b7 = 15, .c7 = 15, .d7 = 20, .e7 = 20, .f7 = 15, .g7 = 15, .h7 = 15,
			.a6 =  0, .b6 =  0, .c6 =  0, .d6 =  0, .e6 =  0, .f6 =  0, .g6 =  0, .h6 =  0,
			.a5 =  0, .b5 =  0, .c5 =  0, .d5 =  0, .e5 =  0, .f5 =  0, .g5 =  0, .h5 =  0,
			.a4 =  0, .b4 =  0, .c4 =  0, .d4 =  0, .e4 =  0, .f4 =  0, .g4 =  0, .h4 =  0,
			.a3 =  0, .b3 =  0, .c3 =  0, .d3 =  0, .e3 =  0, .f3 =  0, .g3 =  0, .h3 =  0,
			.a2 =  0, .b2 =  0, .c2 =  0, .d2 =  0, .e2 =  0, .f2 =  0, .g2 =  0, .h2 =  0,
			.a1 =  0, .b1 =  0, .c1 = 10, .d1 = 10, .e1 = 10, .f1 = 10, .g1 =  0, .h1 =  0,
		}),

		.queen = SquareTable(base.defs.score.Int).init(.{
			.a8 = -30, .b8 = -20, .c8 = -10, .d8 = -10, .e8 = -10, .f8 = -10, .g8 = -20, .h8 = -30,
			.a7 = -20, .b7 = -10, .c7 =  -5, .d7 =  -5, .e7 =  -5, .f7 =  -5, .g7 = -10, .h7 = -20,
			.a6 = -10, .b6 =  -5, .c6 =  10, .d6 =  10, .e6 =  10, .f6 =  10, .g6 =  -5, .h6 = -10,
			.a5 = -10, .b5 =  -5, .c5 =  10, .d5 =  20, .e5 =  20, .f5 =  10, .g5 =  -5, .h5 = -10,
			.a4 = -10, .b4 =  -5, .c4 =  10, .d4 =  20, .e4 =  20, .f4 =  10, .g4 =  -5, .h4 = -10,
			.a3 = -10, .b3 =  -5, .c3 =  -5, .d3 =  -5, .e3 =  -5, .f3 =  -5, .g3 =  -5, .h3 = -10,
			.a2 = -20, .b2 = -10, .c2 =  -5, .d2 =  -5, .e2 =  -5, .f2 =  -5, .g2 = -10, .h2 = -20,
			.a1 = -30, .b1 = -20, .c1 = -10, .d1 = -10, .e1 = -10, .f1 = -10, .g1 = -20, .h1 = -30,
		}),

		.king = SquareTable(base.defs.score.Int).init(.{
			.a8 =  0, .b8 =  0, .c8 =  0, .d8 =   0, .e8 =   0, .f8 =  0, .g8 =  0, .h8 =  0,
			.a7 =  0, .b7 =  0, .c7 =  0, .d7 =   0, .e7 =   0, .f7 =  0, .g7 =  0, .h7 =  0,
			.a6 =  0, .b6 =  0, .c6 =  0, .d6 =   0, .e6 =   0, .f6 =  0, .g6 =  0, .h6 =  0,
			.a5 =  0, .b5 =  0, .c5 =  0, .d5 =   0, .e5 =   0, .f5 =  0, .g5 =  0, .h5 =  0,
			.a4 =  0, .b4 =  0, .c4 =  0, .d4 =   0, .e4 =   0, .f4 =  0, .g4 =  0, .h4 =  0,
			.a3 =  0, .b3 =  0, .c3 =  0, .d3 =   0, .e3 =   0, .f3 =  0, .g3 =  0, .h3 =  0,
			.a2 = 10, .b2 = 10, .c2 =  0, .d2 = -10, .e2 = -10, .f2 =  0, .g2 = 10, .h2 = 10,
			.a1 = 20, .b1 = 20, .c1 = 10, .d1 = -10, .e1 = -10, .f1 = 10, .g1 = 20, .h1 = 20,
		}),
	});

	const eg_tbls = std.EnumArray(base.types.Ptype, SquareTable(base.defs.score.Int)).init(.{
		.nul = SquareTable(base.defs.score.Int).initFill(0),
		.all = SquareTable(base.defs.score.Int).initFill(0),

		.pawn = SquareTable(base.defs.score.Int).init(.{
			.a8 =  0, .b8 =  0, .c8 =  0, .d8 =   0, .e8 =   0, .f8 =  0, .g8 =  0, .h8 =  0,
			.a7 = 60, .b7 = 60, .c7 = 60, .d7 =  70, .e7 =  70, .f7 = 60, .g7 = 60, .h7 = 60,
			.a6 = 40, .b6 = 40, .c6 = 40, .d6 =  60, .e6 =  60, .f6 = 40, .g6 = 40, .h6 = 40,
			.a5 = 20, .b5 = 20, .c5 = 20, .d5 =  50, .e5 =  50, .f5 = 20, .g5 = 20, .h5 = 20,
			.a4 =  5, .b4 =  5, .c4 = 10, .d4 =  40, .e4 =  40, .f4 = 10, .g4 =  5, .h4 =  5,
			.a3 =  5, .b3 =  5, .c3 =  5, .d3 =  30, .e3 =  30, .f3 =  5, .g3 =  5, .h3 =  5,
			.a2 =  5, .b2 =  5, .c2 =  5, .d2 = -30, .e2 = -30, .f2 =  5, .g2 =  5, .h2 =  5,
			.a1 =  0, .b1 =  0, .c1 =  0, .d1 =   0, .e1 =   0, .f1 =  0, .g1 =  0, .h1 =  0,
		}),

		.knight = SquareTable(base.defs.score.Int).init(.{
			.a8 = -10, .b8 =  0, .c8 =  0, .d8 =  0, .e8 =  0, .f8 =  0, .g8 =  0, .h8 = -10,
			.a7 =   0, .b7 =  5, .c7 =  5, .d7 =  5, .e7 =  5, .f7 =  5, .g7 =  5, .h7 =   0,
			.a6 =   0, .b6 =  5, .c6 = 25, .d6 = 25, .e6 = 25, .f6 = 25, .g6 =  5, .h6 =   0,
			.a5 =   0, .b5 =  5, .c5 = 25, .d5 = 25, .e5 = 25, .f5 = 25, .g5 =  5, .h5 =   0,
			.a4 =   0, .b4 =  5, .c4 = 25, .d4 = 25, .e4 = 25, .f4 = 25, .g4 =  5, .h4 =   0,
			.a3 =   0, .b3 =  5, .c3 = 25, .d3 = 25, .e3 = 25, .f3 = 25, .g3 =  5, .h3 =   0,
			.a2 =   0, .b2 =  5, .c2 =  5, .d2 =  5, .e2 =  5, .f2 =  5, .g2 =  5, .h2 =   0,
			.a1 = -10, .b1 = 10, .c1 =  0, .d1 =  0, .e1 =  0, .f1 =  0, .g1 = 10, .h1 = -10,
		}),

		.bishop = SquareTable(base.defs.score.Int).init(.{
			.a8 =  0, .b8 = 20, .c8 = 20, .d8 = 20, .e8 = 20, .f8 = 20, .g8 = 20, .h8 =  0,
			.a7 =  5, .b7 = 20, .c7 = 20, .d7 = 20, .e7 = 20, .f7 = 20, .g7 = 20, .h7 =  5,
			.a6 = 10, .b6 = 20, .c6 = 20, .d6 = 25, .e6 = 25, .f6 = 20, .g6 = 20, .h6 = 10,
			.a5 = 10, .b5 = 30, .c5 = 30, .d5 = 50, .e5 = 50, .f5 = 30, .g5 = 30, .h5 = 10,
			.a4 = 25, .b4 = 25, .c4 = 30, .d4 = 45, .e4 = 45, .f4 = 30, .g4 = 25, .h4 = 25,
			.a3 = 25, .b3 = 25, .c3 = 25, .d3 = 30, .e3 = 30, .f3 = 25, .g3 = 25, .h3 = 25,
			.a2 = 10, .b2 = 25, .c2 = 25, .d2 = 30, .e2 = 30, .f2 = 25, .g2 = 25, .h2 = 10,
			.a1 =  0, .b1 = 10, .c1 = 10, .d1 = 10, .e1 = 10, .f1 = 10, .g1 = 10, .h1 =  0,
		}),

		.rook = SquareTable(base.defs.score.Int).init(.{
			.a8 =  0, .b8 =  0, .c8 =  0, .d8 =  0, .e8 =  0, .f8 =  0, .g8 =  0, .h8 =  0,
			.a7 = 15, .b7 = 15, .c7 = 15, .d7 = 20, .e7 = 20, .f7 = 15, .g7 = 15, .h7 = 15,
			.a6 =  0, .b6 =  0, .c6 =  0, .d6 =  0, .e6 =  0, .f6 =  0, .g6 =  0, .h6 =  0,
			.a5 =  0, .b5 =  0, .c5 =  0, .d5 =  0, .e5 =  0, .f5 =  0, .g5 =  0, .h5 =  0,
			.a4 =  0, .b4 =  0, .c4 =  0, .d4 =  0, .e4 =  0, .f4 =  0, .g4 =  0, .h4 =  0,
			.a3 =  0, .b3 =  0, .c3 =  0, .d3 =  0, .e3 =  0, .f3 =  0, .g3 =  0, .h3 =  0,
			.a2 =  0, .b2 =  0, .c2 =  0, .d2 =  0, .e2 =  0, .f2 =  0, .g2 =  0, .h2 =  0,
			.a1 =  0, .b1 =  0, .c1 = 10, .d1 = 10, .e1 = 10, .f1 = 10, .g1 =  0, .h1 =  0,
		}),

		.queen = SquareTable(base.defs.score.Int).init(.{
			.a8 = -30, .b8 = -20, .c8 = -10, .d8 = -10, .e8 = -10, .f8 = -10, .g8 = -20, .h8 = -30,
			.a7 = -20, .b7 = -10, .c7 =  -5, .d7 =  -5, .e7 =  -5, .f7 =  -5, .g7 = -10, .h7 = -20,
			.a6 = -10, .b6 =  -5, .c6 =  10, .d6 =  10, .e6 =  10, .f6 =  10, .g6 =  -5, .h6 = -10,
			.a5 = -10, .b5 =  -5, .c5 =  10, .d5 =  20, .e5 =  20, .f5 =  10, .g5 =  -5, .h5 = -10,
			.a4 = -10, .b4 =  -5, .c4 =  10, .d4 =  20, .e4 =  20, .f4 =  10, .g4 =  -5, .h4 = -10,
			.a3 = -10, .b3 =  -5, .c3 =  -5, .d3 =  -5, .e3 =  -5, .f3 =  -5, .g3 =  -5, .h3 = -10,
			.a2 = -20, .b2 = -10, .c2 =  -5, .d2 =  -5, .e2 =  -5, .f2 =  -5, .g2 = -10, .h2 = -20,
			.a1 = -30, .b1 = -20, .c1 = -10, .d1 = -10, .e1 = -10, .f1 = -10, .g1 = -20, .h1 = -30,
		}),

		.king = SquareTable(base.defs.score.Int).init(.{
 			.a8 = -95, .b8 = -95, .c8 = -90, .d8 = -90, .e8 = -90, .f8 = -90, .g8 = -95, .h8 = -95,
 			.a7 = -95, .b7 = -50, .c7 = -50, .d7 = -50, .e7 = -50, .f7 = -50, .g7 = -50, .h7 = -95,
 			.a6 = -90, .b6 = -50, .c6 = -20, .d6 = -20, .e6 = -20, .f6 = -20, .g6 = -50, .h6 = -90,
 			.a5 = -90, .b5 = -50, .c5 = -20, .d5 =   0, .e5 =   0, .f5 = -20, .g5 = -50, .h5 = -90,
 			.a4 = -90, .b4 = -50, .c4 = -20, .d4 =   0, .e4 =   0, .f4 = -20, .g4 = -50, .h4 = -90,
 			.a3 = -90, .b3 = -50, .c3 = -20, .d3 = -20, .e3 = -20, .f3 = -20, .g3 = -50, .h3 = -90,
 			.a2 = -95, .b2 = -50, .c2 = -50, .d2 = -50, .e2 = -50, .f2 = -50, .g2 = -50, .h2 = -95,
 			.a1 = -95, .b1 = -95, .c1 = -90, .d1 = -90, .e1 = -90, .f1 = -90, .g1 = -95, .h1 = -95,
		}),
	});

	for (base.types.Ptype.values) |pt| {
		for (base.types.Square.values) |s| {
			tbl.getPtr(pt).set(s, .{
				.mg = base.defs.score.fromCentipawns(mg_tbls.get(pt).get(s)),
				.eg = base.defs.score.fromCentipawns(eg_tbls.get(pt).get(s)),
			});
		}
	}
}
